pipeline {
    agent any

    stages {
        stage('Prepared Source') {
            steps {
                git branch: 'dev', credentialsId: 'parkging', url: 'https://github.com/parkging/hello-blog-front'
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'node:18.15'
                }
            }
            steps {
                sh '''cd /var/jenkins_home/workspace/blog-frontend/ 
                pwd && ls
                npm install --force, or --legacy-peer-deps
                npm run build:dev
                tar -cf build.tar build
                '''
            }
        }
        
        stage('deploy') {
            steps {
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'host',  
                            transfers: [
                                
                                sshTransfer(
                                    cleanRemote: false, 
                                    excludes: '', 
                                    execCommand: '''
                                                rm -rf build.back || true
                                                mv -f build build.backup || true
                                                ''', 
                                    execTimeout: 120000, 
                                    flatten: false, 
                                    makeEmptyDirs: false, 
                                    noDefaultExcludes: false, 
                                    patternSeparator: '[, ]+', 
                                    remoteDirectory: 'blog/frontend/', 
                                    remoteDirectorySDF: false, 
                                    removePrefix: '', 
                                    sourceFiles: ''
                                ),
                                sshTransfer(
                                    cleanRemote: false, 
                                    excludes: '', 
                                    execCommand: '''
                                                cd blog/frontend/
                                                tar -xf build.tar
                                                docker-compose down && docker-compose up -d
                                                ''', 
                                    execTimeout: 120000, 
                                    flatten: false, 
                                    makeEmptyDirs: false, 
                                    noDefaultExcludes: false, 
                                    patternSeparator: '[, ]+', 
                                    remoteDirectory: 'blog/frontend/', 
                                    remoteDirectorySDF: false, 
                                    removePrefix: '', 
                                    sourceFiles: 'build.tar'
                                )
                            ], 
                            usePromotionTimestamp: true, 
                            useWorkspaceInPromotion: true, 
                            verbose: true
                        )
                    ]
                )
            }
        }
        
    }
    
}
